name: "Prod Deploy"

on:
  workflow_dispatch:
    inputs:
      TAG:
        description: "Tag to Deploy"
        type: string
        required: true
        default: "latest"
      #BUILD:
      #  description: "Build Image"
      #  type: boolean
      #  required: true
      #  default: true
      #DEPLOY:
      #  description: "Deploy Image"
      #  type: boolean
      #  required: true
      #  default: true
      CLEANUP:
        description: "Run Cleanup"
        type: boolean
        required: true
        default: true
  #push:
  #  branches:
  #    - master

env:
  STACK_NAME: prod_cssnr-carlbot-red
  STACK_FILE: docker-compose-swarm.yaml
  CONFIG_FILE: services/cssnr/carlbot-red/prod.env

jobs:
  build:
    name: "Build"
    uses: ./.github/workflows/build.yaml
    #if: ${{ inputs.BUILD != '' && inputs.BUILD || true }}
    permissions:
      contents: read
      packages: write
    with:
      GHCR_TAG: ${{ inputs.TAG != '' && inputs.TAG || 'latest' }}
      GHCR_URI: "ghcr.io/${{ github.repository }}"
      GHCR_USER: ${{ vars.GHCR_USER }}
    secrets:
      GHCR_PASS: ${{ secrets.GHCR_PASS }}

  deploy:
    name: "Deploy"
    uses: ./.github/workflows/deploy.yaml
    needs: build
    #if: ${{ inputs.DEPLOY != '' && inputs.DEPLOY || true }}
    permissions:
      contents: read
    with:
      GHCR_TAG: ${{ inputs.TAG != '' && inputs.TAG || 'latest' }}
      STACK_NAME: prod_cssnr-django5-boiler
      STACK_FILE: docker-compose-swarm.yaml
      CONFIG_FILE: services/shane/django5-boiler/prod.env
    secrets:
      SERVICE_CONFIGS_KEY: ${{ secrets.SERVICE_CONFIGS_KEY }}
      PORTAINER_URL: ${{ secrets.PORTAINER_URL }}
      PORTAINER_TOKEN: ${{ secrets.PORTAINER_TOKEN }}

  cleanup:
    name: "Cleanup"
    uses: ./.github/workflows/cleanup.yaml
    needs: deploy
    if: ${{ inputs.CLEANUP != '' && inputs.CLEANUP || true }}
    secrets:
      CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
